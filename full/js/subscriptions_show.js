async function loadSubscriptions(userId) {
  const res = await fetch("/user-subscriptions", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ userId }),
  });

  if (!res.ok) throw new Error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ñ–≤");

  const subscriptions = await res.json();
  const subscriptionBlock = document.querySelector(".subscription-block");

  // üßº –û—á–∏—Å—Ç–∏—Ç–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≤–∏–º –≤–∏–≤–æ–¥–æ–º
  subscriptionBlock.innerHTML = "<h3>–ê–±–æ–Ω–µ–º–µ–Ω—Ç</h3>";

  let gymEndDate = null;

  if (subscriptions.length === 0) {
    subscriptionBlock.innerHTML += "<p>–£ –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ñ–≤.</p>";
  } else {
    subscriptions.forEach((sub) => {
      const purchaseDate = new Date(sub.purchase_date);
      const endDate = new Date(purchaseDate);
      let subscriptionType = sub.type;
      let displayText = "";

      switch (sub.type) {
        case "gym":
          subscriptionType = "–¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω–∏–π –∑–∞–ª";
          endDate.setDate(endDate.getDate() + sub.duration);
          gymEndDate = endDate;
          displayText = `–î—ñ–π—Å–Ω–∏–π –¥–æ ${endDate.toISOString().split("T")[0]}`;
          break;
        case "fitness":
          subscriptionType = "–§—ñ—Ç–Ω–µ—Å";
          displayText = `${sub.duration} –∑–∞–Ω—è—Ç—å –∑–∞–ª–∏—à–∏–ª–æ—Å—è`;
          break;
        case "boxing":
          subscriptionType = "–ë–æ–∫—Å";
          displayText = `${sub.duration} –∑–∞–Ω—è—Ç—å –∑–∞–ª–∏—à–∏–ª–æ—Å—è`;
          break;
        default:
          displayText = "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞";
      }

      subscriptionBlock.innerHTML += `<p>${subscriptionType} ‚Äî ${displayText}</p>`;
    });
  }

  return gymEndDate;
}
